// <auto-generated />
using System;
using Live.MagicAuth.Domain.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Live.MagicAuth.Domain.Migrations
{
    [DbContext(typeof(LiveDataProvider))]
    partial class LiveDataProviderModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Live.MagicAuth.Domain.Credentials.Credential", b =>
                {
                    b.Property<DateTime>("RegDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("AaGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("CredType")
                        .HasColumnType("text");

                    b.Property<byte[]>("CustomerId")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descriptor")
                        .HasColumnType("jsonb");

                    b.Property<byte[]>("PublicKey")
                        .HasColumnType("bytea");

                    b.Property<long>("SignatureCounter")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("UserHandle")
                        .HasColumnType("bytea");

                    b.HasKey("RegDate");

                    b.HasIndex("CustomerId");

                    b.ToTable("Credential", (string)null);
                });

            modelBuilder.Entity("Live.MagicAuth.Domain.Customers.Customer", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Live.MagicAuth.Domain.Credentials.Credential", b =>
                {
                    b.HasOne("Live.MagicAuth.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
